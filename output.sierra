type felt = felt;
type Unit = Struct<ut@Tuple>;
type Array<felt> = Array<felt>;
type core::PanicResult::<()> = Enum<ut@core::PanicResult::<()>, Unit, Array<felt>>;
type core::option::Option::<core::felt> = Enum<ut@core::option::Option::<core::felt>, felt, Unit>;

libfunc felt_const<1> = felt_const<1>;
libfunc felt_const<2> = felt_const<2>;
libfunc store_temp<felt> = store_temp<felt>;
libfunc function_call<user@core::cheatcodes::roll> = function_call<user@core::cheatcodes::roll>;
libfunc enum_match<core::PanicResult::<()>> = enum_match<core::PanicResult::<()>>;
libfunc branch_align = branch_align;
libfunc store_temp<Unit> = store_temp<Unit>;
libfunc jump = jump;
libfunc enum_init<core::PanicResult::<()>, 1> = enum_init<core::PanicResult::<()>, 1>;
libfunc store_temp<core::PanicResult::<()>> = store_temp<core::PanicResult::<()>>;
libfunc enum_init<core::PanicResult::<()>, 0> = enum_init<core::PanicResult::<()>, 0>;
libfunc drop<Unit> = drop<Unit>;
libfunc felt_const<1952805748> = felt_const<1952805748>;
libfunc declare = declare;
libfunc drop<felt> = drop<felt>;
libfunc array_new<felt> = array_new<felt>;
libfunc array_append<felt> = array_append<felt>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc felt_const<123> = felt_const<123>;
libfunc enum_init<core::option::Option::<core::felt>, 0> = enum_init<core::option::Option::<core::felt>, 0>;
libfunc store_temp<core::option::Option::<core::felt>> = store_temp<core::option::Option::<core::felt>>;
libfunc function_call<user@core::cheatcodes::start_prank> = function_call<user@core::cheatcodes::start_prank>;
libfunc cheat_roll = cheat_roll;
libfunc cheat_start_prank = cheat_start_prank;

felt_const<1>() -> ([0]);
felt_const<2>() -> ([1]);
store_temp<felt>([0]) -> ([3]);
store_temp<felt>([1]) -> ([4]);
function_call<user@core::cheatcodes::roll>([3], [4]) -> ([2]);
enum_match<core::PanicResult::<()>>([2]) { 6([5]) 9([6]) };
branch_align() -> ();
store_temp<Unit>([5]) -> ([7]);
jump() { 13() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([6]) -> ([8]);
store_temp<core::PanicResult::<()>>([8]) -> ([9]);
return([9]);
enum_init<core::PanicResult::<()>, 0>([7]) -> ([10]);
store_temp<core::PanicResult::<()>>([10]) -> ([11]);
return([11]);
felt_const<1>() -> ([0]);
felt_const<2>() -> ([1]);
store_temp<felt>([0]) -> ([3]);
store_temp<felt>([1]) -> ([4]);
function_call<user@core::cheatcodes::roll>([3], [4]) -> ([2]);
enum_match<core::PanicResult::<()>>([2]) { 22([5]) 25([6]) };
branch_align() -> ();
drop<Unit>([5]) -> ();
jump() { 29() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([6]) -> ([7]);
store_temp<core::PanicResult::<()>>([7]) -> ([8]);
return([8]);
felt_const<1>() -> ([9]);
felt_const<2>() -> ([10]);
store_temp<felt>([9]) -> ([12]);
store_temp<felt>([10]) -> ([13]);
function_call<user@core::cheatcodes::roll>([12], [13]) -> ([11]);
enum_match<core::PanicResult::<()>>([11]) { 35([14]) 38([15]) };
branch_align() -> ();
store_temp<Unit>([14]) -> ([16]);
jump() { 42() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([15]) -> ([17]);
store_temp<core::PanicResult::<()>>([17]) -> ([18]);
return([18]);
enum_init<core::PanicResult::<()>, 0>([16]) -> ([19]);
store_temp<core::PanicResult::<()>>([19]) -> ([20]);
return([20]);
felt_const<1>() -> ([0]);
felt_const<2>() -> ([1]);
store_temp<felt>([0]) -> ([3]);
store_temp<felt>([1]) -> ([4]);
function_call<user@core::cheatcodes::roll>([3], [4]) -> ([2]);
enum_match<core::PanicResult::<()>>([2]) { 51([5]) 54([6]) };
branch_align() -> ();
drop<Unit>([5]) -> ();
jump() { 58() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([6]) -> ([7]);
store_temp<core::PanicResult::<()>>([7]) -> ([8]);
return([8]);
felt_const<1>() -> ([9]);
felt_const<2>() -> ([10]);
store_temp<felt>([9]) -> ([12]);
store_temp<felt>([10]) -> ([13]);
function_call<user@core::cheatcodes::roll>([12], [13]) -> ([11]);
enum_match<core::PanicResult::<()>>([11]) { 64([14]) 67([15]) };
branch_align() -> ();
drop<Unit>([14]) -> ();
jump() { 71() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([15]) -> ([16]);
store_temp<core::PanicResult::<()>>([16]) -> ([17]);
return([17]);
felt_const<1>() -> ([18]);
felt_const<2>() -> ([19]);
store_temp<felt>([18]) -> ([21]);
store_temp<felt>([19]) -> ([22]);
function_call<user@core::cheatcodes::roll>([21], [22]) -> ([20]);
enum_match<core::PanicResult::<()>>([20]) { 77([23]) 80([24]) };
branch_align() -> ();
store_temp<Unit>([23]) -> ([25]);
jump() { 84() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([24]) -> ([26]);
store_temp<core::PanicResult::<()>>([26]) -> ([27]);
return([27]);
enum_init<core::PanicResult::<()>, 0>([25]) -> ([28]);
store_temp<core::PanicResult::<()>>([28]) -> ([29]);
return([29]);
felt_const<1952805748>() -> ([0]);
store_temp<felt>([0]) -> ([0]);
declare([0]) { fallthrough([1]) 93([2]) };
branch_align() -> ();
drop<felt>([1]) -> ();
jump() { 99() };
branch_align() -> ();
array_new<felt>() -> ([3]);
array_append<felt>([3], [2]) -> ([4]);
enum_init<core::PanicResult::<()>, 1>([4]) -> ([5]);
store_temp<core::PanicResult::<()>>([5]) -> ([6]);
return([6]);
struct_construct<Unit>() -> ([7]);
enum_init<core::PanicResult::<()>, 0>([7]) -> ([8]);
store_temp<core::PanicResult::<()>>([8]) -> ([9]);
return([9]);
felt_const<123>() -> ([0]);
felt_const<123>() -> ([1]);
enum_init<core::option::Option::<core::felt>, 0>([1]) -> ([2]);
store_temp<felt>([0]) -> ([4]);
store_temp<core::option::Option::<core::felt>>([2]) -> ([5]);
function_call<user@core::cheatcodes::start_prank>([4], [5]) -> ([3]);
enum_match<core::PanicResult::<()>>([3]) { 110([6]) 113([7]) };
branch_align() -> ();
store_temp<Unit>([6]) -> ([8]);
jump() { 117() };
branch_align() -> ();
enum_init<core::PanicResult::<()>, 1>([7]) -> ([9]);
store_temp<core::PanicResult::<()>>([9]) -> ([10]);
return([10]);
enum_init<core::PanicResult::<()>, 0>([8]) -> ([11]);
store_temp<core::PanicResult::<()>>([11]) -> ([12]);
return([12]);
cheat_roll([0], [1]) { fallthrough() 123([2]) };
branch_align() -> ();
jump() { 129() };
branch_align() -> ();
array_new<felt>() -> ([3]);
array_append<felt>([3], [2]) -> ([4]);
enum_init<core::PanicResult::<()>, 1>([4]) -> ([5]);
store_temp<core::PanicResult::<()>>([5]) -> ([6]);
return([6]);
struct_construct<Unit>() -> ([7]);
enum_init<core::PanicResult::<()>, 0>([7]) -> ([8]);
store_temp<core::PanicResult::<()>>([8]) -> ([9]);
return([9]);
cheat_start_prank([0], [1]) { fallthrough() 136([2]) };
branch_align() -> ();
jump() { 142() };
branch_align() -> ();
array_new<felt>() -> ([3]);
array_append<felt>([3], [2]) -> ([4]);
enum_init<core::PanicResult::<()>, 1>([4]) -> ([5]);
store_temp<core::PanicResult::<()>>([5]) -> ([6]);
return([6]);
struct_construct<Unit>() -> ([7]);
enum_init<core::PanicResult::<()>, 0>([7]) -> ([8]);
store_temp<core::PanicResult::<()>>([8]) -> ([9]);
return([9]);

cheatcode_caller::cheatcode_caller::test_cheatcode_caller@0() -> (core::PanicResult::<()>);
cheatcode_caller::cheatcode_caller::test_cheatcode_caller_twice@16() -> (core::PanicResult::<()>);
cheatcode_caller::cheatcode_caller::test_cheatcode_caller_three@45() -> (core::PanicResult::<()>);
cheatcode_caller::cheatcode_caller::test_declare@87() -> (core::PanicResult::<()>);
cheatcode_caller::cheatcode_caller::test_start_prank@103() -> (core::PanicResult::<()>);
core::cheatcodes::roll@120([0]: felt, [1]: felt) -> (core::PanicResult::<()>);
core::cheatcodes::start_prank@133([0]: felt, [1]: core::option::Option::<core::felt>) -> (core::PanicResult::<()>);
